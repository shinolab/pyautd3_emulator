import numpy as np
import pytest
from pyautd3 import AUTD3
from pyautd3.autd_error import AUTDError
from pyautd3.driver.datagram.silencer import FixedCompletionTime, Silencer
from pyautd3.driver.firmware.fpga.emit_intensity import EmitIntensity
from pyautd3.driver.firmware.fpga.phase import Phase
from pyautd3.gain import Uniform
from pyautd3.utils import Duration

from pyautd3_emulator import Emulator, InstantRecordOption, RangeXYZ, Recorder, RmsRecordOption


def create_emulator() -> Emulator:
    return Emulator([AUTD3(pos=[0.0, 0.0, 0.0], rot=[1.0, 0.0, 0.0, 0.0]), AUTD3(pos=[0.0, 0.0, 0.0], rot=[1.0, 0.0, 0.0, 0.0])])


def test_transducer_table():
    with create_emulator() as emulator:
        table = emulator.transducer_table()
        assert np.array_equal(table["dev_idx"].to_numpy(), np.concatenate([np.zeros(249, np.uint16), np.ones(249, np.uint16)]))
        assert np.array_equal(table["tr_idx"].to_numpy(), np.concatenate([np.arange(249, dtype=np.uint8), np.arange(249, dtype=np.uint8)]))
        assert np.array_equal(table["x[mm]"].to_numpy(), np.ravel([[tr.position()[0] for tr in dev] for dev in emulator.geometry]))
        assert np.array_equal(table["y[mm]"].to_numpy(), np.ravel([[tr.position()[1] for tr in dev] for dev in emulator.geometry]))
        assert np.array_equal(table["z[mm]"].to_numpy(), np.ravel([[tr.position()[2] for tr in dev] for dev in emulator.geometry]))
        assert np.array_equal(table["nx"].to_numpy(), np.zeros(249 * 2, np.float32))
        assert np.array_equal(table["ny"].to_numpy(), np.zeros(249 * 2, np.float32))
        assert np.array_equal(table["nz"].to_numpy(), np.ones(249 * 2, np.float32))


def test_record_phase():
    with create_emulator() as emulator:

        def f(autd: Recorder) -> None:
            autd.send(
                Silencer(
                    config=FixedCompletionTime(intensity=Duration.from_micros(50), phase=Duration.from_micros(50)),
                ),
            )
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(50))

        record = emulator.record(f)
        phase = record.phase()
        expect = np.array([32, 64], np.uint8)
        for i, col in enumerate(phase.columns):
            assert col == f"phase@{i * 25000}[ns]"
            for v in phase[col]:
                assert v == expect[i]


def test_record_pulse_width():
    with create_emulator() as emulator:

        def f(autd: Recorder) -> None:
            autd.send(
                Silencer(
                    config=FixedCompletionTime(intensity=Duration.from_micros(50), phase=Duration.from_micros(50)),
                ),
            )
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(50))

        record = emulator.record(f)
        pulse_width = record.pulse_width()
        expect = np.array([85, 256], np.uint16)
        for i, col in enumerate(pulse_width.columns):
            assert col == f"pulse_width@{i * 25000}[ns]"
            for v in pulse_width[col]:
                assert v == expect[i]


def test_record_output_voltage():
    with create_emulator() as emulator:

        def f(autd: Recorder) -> None:
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(25))

        record = emulator.record(f)
        volatage = record.output_voltage()
        expect = np.array(
            [
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                -12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
                12.0,
            ],
            np.float32,
        )
        for i, col in enumerate(volatage.columns):
            assert col == f"voltage[V]@{i}[25us/512]"
            for v in volatage[col]:
                assert v == expect[i]


def test_record_output_ultrasound():
    with create_emulator() as emulator:

        def f(autd: Recorder) -> None:
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(25))

        record = emulator.record(f)
        ult = record.output_ultrasound()
        expect = np.array(
            [
                0.0,
                -0.0002719050971791148,
                -0.0004806105571333319,
                -0.0006176632596179843,
                -0.0006911919917911291,
                -0.0007084099925123155,
                -0.0006757190567441285,
                -0.0005988014745526016,
                -0.0004827017255593091,
                -0.0003318989183753729,
                -0.00015037099365144968,
                -9.027929627336562e-05,
                -6.90884844516404e-05,
                -9.797554957913235e-05,
                -0.00017122659482993186,
                -0.0002837690699379891,
                -0.00043109917896799743,
                -0.0006092171533964574,
                -0.0008145701722241938,
                -0.0010440015466883779,
                -0.0012947061331942677,
                -0.0015641895588487387,
                -0.0018502341117709875,
                -0.0021508666686713696,
                -0.0024643305223435163,
                -0.002789062447845936,
                -0.003123669186607003,
                -0.003466908121481538,
                -0.003817671909928322,
                -0.004174971021711826,
                -0.0045379227958619595,
                -0.004905735608190298,
                -0.005277703050523996,
                -0.0056531913578510284,
                -0.006031631492078304,
                -0.006412512622773647,
                -0.006795376073569059,
                -0.007179807405918837,
                -0.007565433159470558,
                -0.007951915264129639,
                -0.008338947780430317,
                -0.008726254105567932,
                -0.009113579988479614,
                -0.009500695392489433,
                -0.0098873907700181,
                -0.010273470543324947,
                -0.01065875869244337,
                -0.011043092235922813,
                -0.011426318436861038,
                -0.011808297596871853,
                -0.012188899330794811,
                -0.012568000704050064,
                -0.012945488095283508,
                -0.013321254402399063,
                -0.013695198111236095,
                -0.014067225158214569,
                -0.014437243342399597,
                -0.01480516791343689,
                -0.015170915052294731,
                -0.015534408390522003,
                -0.015895571559667587,
                -0.016254330053925514,
                -0.01661061868071556,
                -0.016964366659522057,
                -0.017315508797764778,
                -0.0176639836281538,
                -0.01800972782075405,
                -0.018352683633565903,
                -0.01869279332458973,
                -0.019029997289180756,
                -0.019364241510629654,
                -0.019695471972227097,
                -0.020023634657263756,
                -0.020348679274320602,
                -0.020670555531978607,
                -0.02098921127617359,
                -0.021304598078131676,
                -0.02161666750907898,
                -0.021925371140241623,
                -0.022230664268136024,
                -0.022532502189278603,
                -0.022830838337540627,
                -0.023125628009438515,
                -0.023416828364133835,
                -0.023704396560788155,
                -0.02398828975856304,
                -0.024268466979265213,
                -0.024544889107346535,
                -0.024817513301968575,
                -0.025086302310228348,
                -0.02535121701657772,
                -0.02561221830546856,
                -0.02586926892399788,
                -0.026122335344552994,
                -0.02637137845158577,
                -0.02661636285483837,
                -0.026857255026698112,
                -0.027094019576907158,
                -0.02732662484049797,
                -0.027555035427212715,
                -0.027779223397374153,
                -0.02799915336072445,
                -0.028214797377586365,
                -0.028426123782992363,
                -0.028633104637265205,
                -0.028835708275437355,
                -0.029033910483121872,
                -0.02922768145799637,
                -0.029416993260383606,
                -0.029601825401186943,
                -0.02978214994072914,
                -0.029957937076687813,
                -0.030129168182611465,
                -0.03029582090675831,
                -0.030457867309451103,
                -0.030615290626883507,
                -0.03076806850731373,
                -0.030916180461645126,
                -0.03105960600078106,
                -0.031198328360915184,
                -0.03133232519030571,
                -0.03146158903837204,
                -0.03158608824014664,
                -0.0317058190703392,
                -0.03182075545191765,
                -0.031930889934301376,
                -0.03203621134161949,
                -0.0321367010474205,
                -0.03223234415054321,
                -0.03232313692569733,
                -0.03240906074643135,
                -0.03249011188745499,
                -0.03256627172231674,
                -0.03263754025101662,
                -0.032703906297683716,
                -0.03276536241173744,
                -0.0328219011425972,
                -0.03287351876497269,
                -0.03292020782828331,
                -0.03296196088194847,
                -0.03299878537654877,
                -0.033030666410923004,
                -0.03305760771036148,
                -0.0330796092748642,
                -0.033096663653850555,
                -0.033108778297901154,
                -0.03311595320701599,
                -0.03311818465590477,
                -0.03311547636985779,
                -0.033107832074165344,
                -0.03309525549411774,
                -0.03307775408029556,
                -0.03305532783269882,
                -0.03302798792719841,
                -0.03299573436379433,
                -0.03295857831835747,
                -0.03291653096675873,
                -0.032869596034288406,
                -0.0328177884221077,
                -0.0327611081302166,
                -0.0326995775103569,
                -0.03263320401310921,
                -0.032561998814344406,
                -0.03248598054051399,
                -0.032405152916908264,
                -0.03231953829526901,
                -0.03222914785146713,
                -0.032134003937244415,
                -0.032034117728471756,
                -0.03192950412631035,
                -0.03182018920779228,
                -0.03170618414878845,
                -0.03158751130104065,
                -0.031464189291000366,
                -0.03133624419569969,
                -0.03120368905365467,
                -0.03106655180454254,
                -0.030924854800105095,
                -0.03077862225472927,
                -0.03062787465751171,
                -0.030472638085484505,
                -0.03031294234097004,
                -0.030148809775710106,
                -0.029980266466736794,
                -0.02980734035372734,
                -0.029630059376358986,
                -0.029448455199599266,
                -0.02926255576312542,
                -0.029072387143969536,
                -0.02887798473238945,
                -0.0286793764680624,
                -0.028476595878601074,
                -0.028269674628973007,
                -0.028058646246790886,
                -0.027843544259667397,
                -0.027624402195215225,
                -0.027401255443692207,
                -0.02717413939535618,
                -0.026943089440464973,
                -0.026708142831921577,
                -0.026469336822628975,
                -0.02622670866549015,
                -0.025980297476053238,
                -0.025730138644576073,
                -0.025476273149251938,
                -0.025218741968274117,
                -0.024957584217190742,
                -0.0246928408741951,
                -0.02442455291748047,
                -0.024152763187885284,
                -0.02387751266360283,
                -0.023598846048116684,
                -0.02331680618226528,
                -0.023031435906887054,
                -0.022742778062820435,
                -0.022450881078839302,
                -0.02215578965842724,
                -0.021857546642422676,
                -0.021556198596954346,
                -0.021251793950796127,
                -0.020944377407431602,
                -0.0206339992582798,
                -0.020320706069469452,
                -0.020004544407129288,
                -0.019685564562678337,
                -0.01936381682753563,
                -0.019039347767829895,
                -0.018712207674980164,
                -0.018382446840405464,
                -0.018050117418169975,
                -0.017715269699692726,
                -0.017377953976392746,
                -0.017038222402334213,
                -0.016696127131581306,
                -0.016351718455553055,
                -0.016005052253603935,
                -0.015656178817152977,
                -0.015305151231586933,
                -0.01495202537626028,
                -0.014596851542592049,
                -0.014239686541259289,
                -0.013880584388971329,
                -0.013519598171114922,
                -0.01315678283572197,
                -0.012792195193469524,
                -0.012425888329744339,
                -0.012057919055223465,
                -0.01168834324926138,
                -0.011317215859889984,
                -0.010944593697786331,
                -0.010570532642304897,
                -0.010195090435445309,
                -0.009818322025239468,
                -0.009440285153687,
                -0.009061036631464958,
                -0.008680634200572968,
                -0.00829913467168808,
                -0.007916595786809921,
                -0.007533074356615543,
                -0.00714862858876586,
                -0.0067633166909217834,
                -0.006377195939421654,
                -0.005990324541926384,
                -0.0056027602404356,
                -0.0052145617082715034,
                -0.004825787153095007,
                -0.004436494316905737,
                -0.004046741873025894,
                -0.003656588029116392,
                -0.003266091225668788,
                -0.002875309670343995,
                -0.002484302269294858,
                -0.0020931269973516464,
                -0.0017018421785905957,
                -0.0013105064863339067,
                -0.0009191782446578145,
                -0.0005279156612232327,
                -0.00013677703100256622,
                0.00025417920551262796,
                0.0006448950152844191,
                0.0010353121906518936,
                0.0014253726694732904,
                0.0018150187097489834,
                0.0022041923366487026,
                0.0025928355753421783,
                0.002980890916660428,
                0.003368301084265113,
                0.003755008103325963,
                0.004140954930335283,
                0.004526084754616022,
                0.00491033960133791,
                0.005293664056807756,
                0.005676000379025936,
                0.006057292688637972,
                0.006437484174966812,
                0.00681651895865798,
                0.0071943411603569984,
                0.007570894900709391,
                0.00794612430036068,
                0.008319975808262825,
                0.008692392148077488,
                0.009063320234417915,
                0.009432705119252205,
                0.009800491854548454,
                0.01016662735491991,
                0.010531056672334671,
                0.010893727652728558,
                0.011254586279392242,
                0.011613580398261547,
                0.011970656923949718,
                0.012325763702392578,
                0.012678849510848522,
                0.013029862195253372,
                0.01337874960154295,
                0.0137254623696208,
                0.01406994927674532,
                0.014412160031497478,
                0.014752044342458248,
                0.015089552849531174,
                0.01542463805526495,
                0.015757249668240547,
                0.01608734019100666,
                0.016414862126111984,
                0.01673976518213749,
                0.017062006518244743,
                0.017381533980369568,
                0.01769830659031868,
                0.0180122759193182,
                0.018323397263884544,
                0.018631625920534134,
                0.018936919048428535,
                0.01923922821879387,
                0.019538514316082,
                0.0198347307741642,
                0.020127838477492332,
                0.020417792722582817,
                0.02070455439388752,
                0.02098807692527771,
                0.0212683267891407,
                0.021545259281992912,
                0.02181883528828621,
                0.022089017555117607,
                0.022355766966938972,
                0.02261904440820217,
                0.02287881448864937,
                0.02313503809273243,
                0.02338768169283867,
                0.023636706173419952,
                0.023882078006863594,
                0.024123763665556908,
                0.02436172589659691,
                0.02459593303501606,
                0.024826351553201675,
                0.025052951648831367,
                0.0252756979316473,
                0.025494560599327087,
                0.02570950798690319,
                0.02592051401734352,
                0.026127545163035393,
                0.026330573484301567,
                0.026529572904109955,
                0.02672451362013817,
                0.02691536769270897,
                0.027102109044790268,
                0.027284715324640274,
                0.0274631567299366,
                0.027637412771582603,
                0.027807459235191345,
                0.027973271906375885,
                0.028134828433394432,
                0.028292104601860046,
                0.028445083647966385,
                0.028593741357326508,
                0.02873806096613407,
                0.028878018260002136,
                0.029013602063059807,
                0.029144786298274994,
                0.029271557927131653,
                0.02939390204846859,
                0.029511800035834312,
                0.029625236988067627,
                0.02973419800400734,
                0.029838671907782555,
                0.02993864007294178,
                0.03003409504890442,
                0.030125023797154427,
                0.03021141327917576,
                0.03029325231909752,
                0.03037053346633911,
                0.03044324740767479,
                0.030511384829878807,
                0.030574938282370567,
                0.030633902177214622,
                0.030688269063830376,
                0.03073802962899208,
                0.030783185735344887,
                0.03082372434437275,
                0.030859651044011116,
                0.03089095465838909,
                0.030917638912796974,
                0.030939696356654167,
                0.030957134440541267,
                0.030969947576522827,
                0.030978135764598846,
                0.030981702730059624,
                0.03098064847290516,
                0.03097497671842575,
                0.030964689329266548,
                0.030949791893363,
                0.030930286273360252,
                0.030906181782484055,
                0.030877478420734406,
                0.03084418922662735,
                0.030806317925453186,
                0.03076387569308281,
                0.03071686439216137,
                0.030665302649140358,
                0.030609194189310074,
                0.030548550188541412,
                0.030483383685350418,
                0.030413705855607986,
                0.030339529737830162,
                0.03026087023317814,
                0.03017774038016796,
                0.030090151354670525,
                0.02999812364578247,
                0.029901674017310143,
                0.029800815507769585,
                0.02969556488096714,
                0.02958594262599945,
                0.02947196550667286,
                0.029353655874729156,
                0.029231028631329536,
                0.029104109853506088,
                0.028972914442420006,
                0.02883746847510338,
                0.028697794303297997,
                0.02855391427874565,
                0.028405852615833282,
                0.02825363352894783,
                0.028097279369831085,
                0.027936818078160286,
                0.02777227573096752,
                0.02760367840528488,
                0.027431052178144455,
                0.02725442498922348,
                0.027073828503489494,
                0.026889286935329437,
                0.026700833812355995,
                0.026508497074246407,
                0.02631230652332306,
                0.02611229568719864,
                0.025908496230840683,
                0.025700939819216728,
                0.02548965997993946,
                0.025274688377976418,
                0.025056060403585434,
                0.024833811447024345,
                0.02460797317326069,
                0.024378584697842598,
                0.02414567954838276,
                0.023909294977784157,
                0.023669470101594925,
                0.02342623844742775,
                0.023179642856121063,
                0.022929716855287552,
                0.022676503285765648,
                0.022420041263103485,
                0.022160369902849197,
                0.02189752832055092,
                0.021631557494401932,
                0.02136250212788582,
                0.021090399473905563,
                0.020815294235944748,
                0.020537227392196655,
                0.020256243646144867,
                0.019972385838627815,
                0.019685696810483932,
                0.0193962212651968,
                0.01910400390625,
                0.018809091299772263,
                0.01851152814924717,
                0.018211357295513153,
                0.017908627167344093,
                0.01760338619351387,
                0.017295677214860916,
                0.01698554866015911,
                0.016673048958182335,
                0.016358226537704468,
                0.01604112610220909,
                0.015721799805760384,
                0.015400294214487076,
                0.015076659619808197,
                0.014750945381820202,
                0.014423200860619545,
                0.014093476347625256,
                0.013761821202933788,
                0.013428285717964172,
                0.013092922046780586,
                0.012755779549479485,
                0.012416910380125046,
                0.012076365761458874,
                0.011734196916222572,
                0.011390455067157745,
                0.01104519423097372,
                0.010698465630412102,
                0.010350321419537067,
                0.010149442590773106,
                0.010010207071900368,
                0.009941053576767445,
                0.009933842346072197,
                0.009981346316635609,
            ],
            np.float32,
        )
        for i, col in enumerate(ult.columns):
            assert col == f"p[a.u.]@{i}[25us/512]"
            for v in ult[col]:
                assert v == expect[i]


def test_sound_field_instant():
    with Emulator([AUTD3(pos=[0.0, 0.0, 0.0], rot=[1.0, 0.0, 0.0, 0.0])]) as emulator:

        def f(autd: Recorder) -> None:
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(25 * 10))

        record = emulator.record(f)

        sound_field = record.sound_field(
            RangeXYZ(
                x=(-1.0, 1.0),
                y=(0.0, 0.0),
                z=(10.0, 10.0),
                resolution=1.0,
            ),
            InstantRecordOption(
                time_step=Duration.from_micros(1),
            ),
        )

        points_df = sound_field.observe_points()
        assert np.array_equal(np.array([-1, 0, 1], dtype=np.float32), points_df["x[mm]"])
        assert np.array_equal(np.array([0, 0, 0], dtype=np.float32), points_df["y[mm]"])
        assert np.array_equal(np.array([10, 10, 10], dtype=np.float32), points_df["z[mm]"])

        sound_field_df = sound_field.skip(Duration.from_micros(25 * 9)).next(Duration.from_micros(25))
        time = [int(t.replace("p[Pa]@", "").replace("[ns]", "")) for t in sound_field_df.columns]
        assert np.array_equal(225000 + 1000 * np.arange(0, 25), time)
        expect = np.array(
            [
                [190.5300750732422, 80.97726440429688, -44.231544494628906],
                [136.143310546875, 15.299946784973145, -94.196533203125],
                [72.64295959472656, -46.7107048034668, -142.70309448242188],
                [13.6524658203125, -94.33702850341797, -182.30844116210938],
                [-40.597232818603516, -137.91000366210938, -209.95729064941406],
                [-90.78367614746094, -177.1217803955078, -225.28712463378906],
                [-137.60714721679688, -211.8668975830078, -230.05291748046875],
                [-178.8197021484375, -232.9352569580078, -221.59530639648438],
                [-211.67523193359375, -239.10092163085938, -200.82388305664062],
                [-235.62594604492188, -235.16697692871094, -165.63131713867188],
                [-244.8258514404297, -217.22525024414062, -117.29793548583984],
                [-243.50389099121094, -189.19070434570312, -63.47984313964844],
                [-235.2071990966797, -149.44895935058594, -7.311569690704346],
                [-210.73336791992188, -100.80084228515625, 53.82590103149414],
                [-170.49240112304688, -39.96657943725586, 112.35689544677734],
                [-114.10204315185547, 29.669843673706055, 160.4971160888672],
                [-39.907588958740234, 103.72040557861328, 207.9790802001953],
                [39.16866683959961, 168.81234741210938, 244.9036865234375],
                [116.44409942626953, 223.46926879882812, 262.4938049316406],
                [186.21121215820312, 267.5867919921875, 261.85125732421875],
                [243.31556701660156, 291.4182434082031, 244.58543395996094],
                [286.60614013671875, 295.6917724609375, 215.4763946533203],
                [308.5382995605469, 280.2308349609375, 165.65093994140625],
                [308.7378234863281, 247.4834442138672, 103.76083374023438],
                [286.9193115234375, 190.7606201171875, 32.23908996582031],
            ],
        )
        for i, col in enumerate(sound_field_df.columns):
            assert np.allclose(expect[i], sound_field_df[col])


def test_sound_field_rms():
    with Emulator([AUTD3(pos=[0.0, 0.0, 0.0], rot=[1.0, 0.0, 0.0, 0.0])]) as emulator:

        def f(autd: Recorder) -> None:
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            autd.tick(Duration.from_micros(25 * 10))

        record = emulator.record(f)

        sound_field = record.sound_field(
            RangeXYZ(
                x=(-1.0, 1.0),
                y=(0.0, 0.0),
                z=(10.0, 10.0),
                resolution=1.0,
            ),
            RmsRecordOption(),
        )

        points_df = sound_field.observe_points()
        assert np.array_equal(np.array([-1, 0, 1], dtype=np.float32), points_df["x[mm]"])
        assert np.array_equal(np.array([0, 0, 0], dtype=np.float32), points_df["y[mm]"])
        assert np.array_equal(np.array([10, 10, 10], dtype=np.float32), points_df["z[mm]"])

        sound_field_df = sound_field.skip(Duration.from_micros(25 * 9)).next(Duration.from_micros(25))
        time = [int(t.replace("rms[Pa]@", "").replace("[ns]", "")) for t in sound_field_df.columns]
        assert np.array_equal(np.array([225000]), time)
        expect = np.array([[445.02795, 440.45087, 408.70248]])
        for i, col in enumerate(sound_field_df.columns):
            assert np.allclose(expect[i], sound_field_df[col])


def test_record_invalid_tick():
    with create_emulator() as emulator:

        def f(autd: Recorder) -> None:
            autd.send(Uniform(intensity=EmitIntensity(0xFF), phase=Phase(0x40)))
            with pytest.raises(AUTDError) as e:
                autd.tick(Duration.from_micros(1))
            assert str(e.value) == "Tick must be multiple of 25µs"

        _ = emulator.record(f)
